{% extends "__base__.jinja" %}
{% from "__macros__.jinja" import navbarNav, toast, section, submit, button, input, select %}

{% block title %}
  Config
{% endblock title %}

{% block navbarNav %}
  {{ navbarNav("config") }}
{% endblock navbarNav %}

{% block content %}
  <form id="form">
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
      {{ toast("input-config") }}
      {{ toast("output-config") }}
      {{ toast("generate-graphs") }}
      {{ toast("export-results") }}
    </div>

    {% call section("base-directory") %}
      {{ input(label="<h2>Base Directory:</h2>",
            name="base-directory", value=base_directory,
            placeholder="Enter base directory path", required=true,
            button_text="Get Metrics", action="get-metrics",
            indent=true,
            error=base_dir_error) 
      }}
    {% endcall %}

    {% if base_directory and not base_dir_error %}
      {% call section("config") %}
        <div class="row">
          {{ input(label="<h2>Input Configuration File:</h2>",
                    name="input-config", value=input_config,
                    placeholder="Enter input configuration file path", required=false,
                    button_text="Load Configuration", action="load-config",
                    indent=true) 
          }}
          {{ input(label="<h2>Output Configuration File:</h2>",
                    name="output-config", value=output_config,
                    placeholder="Enter output configuration file path", required=false,
                    button_text="Save Configuration", action="save-config",
                    indent=true) 
          }}
        </div>
      {% endcall %}
    {% else %}
      {% call section("config") %}
        <input type="text"
               id="input-config"
               name="input-config"
               value="{{ input_config }}"
               hidden>
        <input type="text"
               id="output-config"
               name="output-config"
               value="{{ output_config }}"
               hidden>
      {% endcall %}
    {% endif %}

    {% if directories %}
      {% call section("directories") %}
        <h2 class="mb-3">Simulation Directories List:</h2>

        <div class="mx-4">
          <div class="mb-3">
            <ul class="list-group col">
              {% for dir in directories %}
                <li class="list-group-item bg-secondary-subtle text-black border border-0 px-2 py-2">
                  <div class="col mb-1">
                    <input id="{{ dir }}"
                           class="form-check-input me-1"
                           type="checkbox"
                           name="directory-list"
                           value="{{ dir }}" />
                    <label class="form-check-label" for="{{ dir }}">{{ dir }}</label>
                  </div>
                  <input id="label-{{ dir }}"
                         class="form-control form-control-sm"
                         type="text"
                         name="label-{{ dir }}"
                         placeholder="Label for {{ dir }}"
                         disabled />
                </li>
              {% endfor %}
            </ul>
          </div>
          <div class="btn-group" role="group" aria-label="Directory Actions">
            {{ button('Select All Directories', 'select-all-directories', 'btn-outline-secondary', class="me-2") }}
            {{ button('Deselect All Directories', 'deselect-all-directories', 'btn-outline-secondary') }}
          </div>
        </div>
      {% endcall %}
    {% endif %}

    {% if grouped_metrics %}
      {% call section("metrics") %}
        <h2 class="mb-3">Metrics List:</h2>
        <div class="mx-4">
          <div class="btn-group mb-3 w-100"
               role="group"
               aria-label="Basic radio toggle button group">
            <input type="radio"
                   class="btn-check"
                   name="metric-type"
                   id="radio-individual"
                   value="individual"
                   autocomplete="off"
                   {% if metric_type == "individual" %}checked{% endif %}>
            <label class="btn btn-outline-primary fw-medium" for="radio-individual">Individual</label>
            <input type="radio"
                   class="btn-check"
                   name="metric-type"
                   id="radio-grouped"
                   value="grouped"
                   autocomplete="off"
                   {% if metric_type == "grouped" %}checked{% endif %}>
            <label class="btn btn-outline-primary fw-medium" for="radio-grouped">Grouped</label>
          </div>
          <input id="previous-metric-type"
                 type="hidden"
                 name="previous-metric-type"
                 value="{{ metric_type }}">
          <div class="accordion accordion-flush" id="accordion">
            {% for metric_group, metric_list in grouped_metrics.items() %}
              <div class="accordion-item bg-dark border-0">
                <h3 class="accordion-header bg-dark">
                  <button id="{{ metric_group }}-header"
                          class="accordion-button text-bg-dark shadow-none fw-medium fs-5 pt-0 pb-3 px-0 collapsed"
                          type="button"
                          data-bs-toggle="collapse"
                          data-bs-target="#{{ metric_group }}"
                          aria-expanded="false"
                          aria-controls="{{ metric_group }}">{{ metric_group }}</button>
                </h3>
                <div id="{{ metric_group }}"
                     class="accordion-collapse collapse bg-dark pt-0 pb-3 mx-4">
                  <div class="accordion-body p-0 pb-2">
                    <ul class="list-group col">
                      {% for metric in metric_list %}
                        <li class="list-group-item bg-secondary-subtle text-black border-0">
                          <input id="{{ metric }}"
                                 class="form-check-input me-1"
                                 type="checkbox"
                                 name="metric-list"
                                 value="{{ metric }}" />
                          <label class="form-check-label stretched-link" for="{{ metric }}">{{ metric }}</label>
                        </li>
                      {% endfor %}
                    </ul>
                  </div>
                  <div class="btn-group p-0" role="group" aria-label="Metrics Actions">
                    {{ button('Select All', 'select-all-' ~ metric_group, 'btn-outline-secondary', class="me-2") }}
                    {{ button('Deselect All', 'deselect-all-' ~ metric_group, 'btn-outline-secondary') }}
                  </div>
                </div>
              </div>
            {% endfor %}
          </div>
          <div class="btn-group" role="group" aria-label="Metrics Actions">
            {{ button('Select All Metrics', 'select-all-metrics', 'btn-outline-secondary', class="me-2") }}
            {{ button('Deselect All Metrics', 'deselect-all-metrics', 'btn-outline-secondary') }}
          </div>
        </div>
      {% endcall %}
    {% endif %}

    {% if base_directory and not base_dir_error %}
      {% call section("graph") %}
        <h2 class="mb-3">Graph Generation:</h2>
        <div class="col mx-4">
          <div class="row mb-2">
            {{ select(label="Graph Type:",
                        name="graph-type",
                        selected=graph_type,
                        options=[
                        ["line", "Line Graph"] ,
                        ["bar", "Bar Graph"],
                        ["stacked-bar", "Stacked Bar Graph"],
                        ]) }}
            {{ select(label="Graph Composition:",
                        name="graph-composition",
                        selected=graph_composition,
                        options=[
                        ["individual", "Individual", true],
                        ["combined", "Combined", false]
                        ]) }}
            {{ select(label="Overwrite Files:",
                        name="overwrite",
                        selected=overwrite,
                        options=[
                        ["true", "Yes"],
                        ["false", "No"]
                        ]) }}
          </div>
          <div class="row mb-2">
            {{ input(label="Figure Width:",
                        name="figure-width", value=figure_width,
                        placeholder="Enter figure width in inches", size="form-control-sm", type="number", label_class="fw-medium") }}
            {{ input(label="Figure Height:",
                        name="figure-height", value=figure_height,
                        placeholder="Enter figure height in inches", size="form-control-sm", type="number", label_class="fw-medium") }}
            {{ select(label="Font Size:",
                        name="font-size",
                        selected=font_size,
                        options=[
                        ["xx-small", "XX-Small"],
                        ["x-small", "X-Small"],
                        ["small", "Small"],
                        ["medium", "Medium"],
                        ["large", "Large"],
                        ["x-large", "X-Large"],
                        ["xx-large", "XX-Large"],
                        ]) }}
          </div>
          <div class="mb-3">
            <div class="fw-medium mb-2">Custom Loads:</div>
            <ul class="list-group">
              {% set digits = load_count|string|length %}
              {% for i in range(load_count) %}
                {% set i_str = "%0{}d".format(digits) % i %}
                <li class="list-group-item bg-secondary border-0 p-1">
                  <div class="input-group input-group-sm">
                    <label class="input-group-text bg-secondary-subtle text-dark"
                           for="load-{{ i }}">Load {{ i_str }}</label>
                    <input id="load-{{ i }}"
                           type="number"
                           class="form-control form-control-sm text-bg-light"
                           name="load-{{ i }}"
                           value="{{ loads[i] }}">
                  </div>
                </li>
              {% endfor %}
            </ul>
          </div>
          <div class="btn-group" role="group" aria-label="Graph Actions">
            {{ submit('Generate Graphs', 'generate-graphs', 'btn-primary', class="me-2") }}
            {{ submit('Export Results', 'export-results', 'btn-primary') }}
          </div>
        </div>
      {% endcall %}
    {% endif %}
  </form>

  {% if debug_output %}
    {% call section("debug") %}
      <h2>Debug Output:</h2>
      <pre id="debug-output" class="text-bg-secondary p-3">{{ debug_output }}</pre>
    {% endcall %}
  {% endif %}
{% endblock content %}
{% block scripts %}
  <script src="{{ url_for('static', filename='mainForm.js') }}"></script>
  {% if has_config_data %}<script>
    document.addEventListener("DOMContentLoaded", loadConfig);
</script>{% endif %}

{% endblock scripts %}
