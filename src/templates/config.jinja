{% extends "__base.jinja" %}
{% from "__macros.jinja" import navbarNav, toast, section, submit_button, input, select, list_group, list_group_text, input_list %}

{% block title %}
  Metrics
{% endblock title %}

{% block navbarNav %}
  {{ navbarNav("config") }}
{% endblock navbarNav %}

{% block content %}
  <form id="form">
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
      {{ toast("input-config-toast") }}
      {{ toast("output-config-toast") }}
      {{ toast("generate-graphs-toast") }}
      {{ toast("export-results-toast") }}
    </div>

    {% call section("base-directory") %}
      {{ input(label="<h2>Base Directory:</h2>",
            name="base-directory", value=base_directory,
            placeholder="Enter base directory path", required=true,
            button_text="Get Metrics", action="get-metrics",
            error=base_dir_error) 
      }}
    {% endcall %}

    {% if base_directory and not base_dir_error %}
      {% call section("config") %}
        <div class="row">
          {{ input(label="<h2>Input Configuration File (Optional):</h2>",
                    name="input-config", value=input_config,
                    placeholder="Enter input configuration file path", required=false,
                    button_text="Load Configuration", action="load-config") 
          }}
          {{ input(label="<h2>Output Configuration File (Optional):</h2>",
                    name="output-config", value=output_config,
                    placeholder="Enter output configuration file path", required=false,
                    button_text="Save Configuration", action="save-config") 
          }}
        </div>
      {% endcall %}
    {% else %}
      {% call section("config") %}
        <input type="text"
               id="input-config"
               name="input-config"
               value="{{ input_config }}"
               hidden>
        <input type="text"
               id="output-config"
               name="output-config"
               value="{{ output_config }}"
               hidden>
      {% endcall %}
    {% endif %}

    {% if directories %}
      {% call section("directories") %}
        <h2>Simulation Directories List:</h2>

        <div class="mb-3">{{ list_group_text("directory-list", directories) }}</div>
        <div class="btn-group" role="group" aria-label="Directory Actions">
          {{ submit_button('Select All', 'select-all-directories', 'btn-outline-primary', class="me-2") }}
          {{ submit_button('Deselect All', 'deselect-all-directories', 'btn-outline-primary') }}
        </div>
      {% endcall %}
    {% endif %}

    {% if grouped_metrics %}
      {% call section("metrics") %}
        <h2>Metrics List:</h2>
        <div class="btn-group mb-3"
             role="group"
             aria-label="Basic radio toggle button group">
          <input type="radio"
                 class="btn-check"
                 name="metric-type"
                 id="radio-individual"
                 value="individual"
                 autocomplete="off"
                 {% if metric_type == "individual" %}checked{% endif %}>
          <label class="btn btn-outline-primary" for="radio-individual">Individual</label>

          <input type="radio"
                 class="btn-check"
                 name="metric-type"
                 id="radio-grouped"
                 value="grouped"
                 autocomplete="off"
                 {% if metric_type == "grouped" %}checked{% endif %}>
          <label class="btn btn-outline-primary" for="radio-grouped">Grouped</label>

        </div>
        <input id="previous-metric-type"
               type="hidden"
               name="previous-metric-type"
               value="{{ metric_type }}">
        <div class="accordion mb-3" id="accordion">
          {% for metric_group, metric_list in grouped_metrics.items() %}
            <div class="accordion-item">
              <h3 class="accordion-header">
                <button id="{{ metric_group }}-btn"
                        class="accordion-button text-bg-secondary shadow-none fw-medium collapsed"
                        type="button"
                        data-bs-toggle="collapse"
                        data-bs-target="#{{ metric_group }}"
                        aria-expanded="false"
                        aria-controls="{{ metric_group }}">{{ metric_group }}</button>
              </h3>
              <div id="{{ metric_group }}"
                   class="accordion-collapse collapse bg-secondary-subtle">
                <div class="accordion-body p-2">{{ list_group("metric-list", metric_list) }}</div>
              </div>
            </div>
          {% endfor %}
        </div>
        <div class="btn-group" role="group" aria-label="Metrics Actions">
          {{ submit_button('Select All', 'select-all-metrics', 'btn-outline-primary', class="me-2") }}
          {{ submit_button('Deselect All', 'deselect-all-metrics', 'btn-outline-primary') }}
        </div>
      {% endcall %}
    {% endif %}

    {% if base_directory and not base_dir_error %}
      {% call section("graph") %}
        <h2>Graph Generation:</h2>
        <div class="col">
          <div class="row mb-2">
            {{ select(label="Graph Type:",
                        name="graph-type",
                        selected=graph_type,
                        options=[
                        ["line", "Line Graph"] ,
                        ["bar", "Bar Graph"],
                        ["stacked-bar", "Stacked Bar Graph"],
                        ]) }}
            {{ select(label="Graph Composition:",
                        name="graph-composition",
                        selected=graph_composition,
                        options=[
                        ["individual", "Individual", true],
                        ["combined", "Combined", false]
                        ]) }}
            {{ select(label="Overwrite Files:",
                        name="overwrite",
                        selected=overwrite,
                        options=[
                        ["true", "Yes"],
                        ["false", "No"]
                        ]) }}
          </div>
          <div class="row mb-2">
            {{ input(label="Figure Width:",
                        name="figure-width", value=figure_width,
                        placeholder="Enter figure width in inches", size="form-control-sm", type="number", label_class="fw-medium") }}
            {{ input(label="Figure Height:",
                        name="figure-height", value=figure_height,
                        placeholder="Enter figure height in inches", size="form-control-sm", type="number", label_class="fw-medium") }}
            {{ select(label="Font Size:",
                        name="font-size",
                        selected=font_size,
                        options=[
                        ["xx-small", "XX-Small"],
                        ["x-small", "X-Small"],
                        ["small", "Small"],
                        ["medium", "Medium"],
                        ["large", "Large"],
                        ["x-large", "X-Large"],
                        ["xx-large", "XX-Large"],
                        ]) }}
          </div>
          <div class="mb-3">
            <div class="fw-medium mb-2">Custom Loads:</div>
            {{ input_list(load_count, loads, "load", "Load") }}
          </div>
          <div class="btn-group" role="group" aria-label="Graph Actions">
            {{ submit_button('Generate Graphs', 'generate-graphs', 'btn-primary', class="me-2") }}
            {{ submit_button('Export Results', 'export-results', 'btn-primary') }}
          </div>
        </div>
      {% endcall %}
    {% endif %}
  </form>

  {% if debug_output %}
    {% call section("debug") %}
      <h2>Debug Output:</h2>
      <pre id="debug-output" class="text-bg-secondary p-3">{{ debug_output }}</pre>
    {% endcall %}
  {% endif %}
{% endblock content %}
{% block scripts %}
  <script src="{{ url_for('static', filename='mainForm.js') }}"></script>
  {% if has_config_data %}<script>
    document.addEventListener("DOMContentLoaded", loadConfig);
</script>{% endif %}

{% endblock scripts %}
