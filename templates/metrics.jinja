{% extends "base.jinja" %}
{% from "macros/macros.jinja" import input, section, list_group, metrics_accordion %}
{% from "macros/sections.jinja" import base_directory_section, input_config_section, output_config_section, directories_section, metrics_section, output_section %}

{% block title %}
  Metrics
{% endblock title %}
{% block header %}
  Metrics
{% endblock header %}
{% block content %}
  <form id="form">
    {{ base_directory_section(base_directory, base_dir_error) }}

    {% if base_directory and not base_dir_error %}
      {{ input_config_section(input_config, input_config_error) }}
      {{ output_config_section(output_config) }}
    {% else %}
      <input type="text" name="input-config" value="{{ input_config }}" hidden>
      <input type="text" name="output-config" value="{{ output_config }}" hidden>
    {% endif %}

    {{ directories_section(directories, config_data) }}

    {{ metrics_section(grouped_metrics, config_data) }}
  </form>

  {{ output_section() }}
{% endblock content %}
{% block scripts %}
  <script>
      const form = document.getElementById("form");
      const output = document.getElementById("output");
      output.textContent = "";
      for (const [key, value] of new FormData(form)) {
          output.textContent += `${key}: ${value}\n`;
      }

      form.addEventListener("submit", function(event) {
          event.preventDefault();
          const formData = new FormData(form, event.submitter);
          console.log(event.submitter.value);
          if (event.submitter.value === "get-metrics") {
              form.method = "post";
              form.action = "{{ url_for('metrics.extract_metrics') }}";
              form.submit();
          }
      });
  </script>
  <script src="{{ url_for('static', filename='forms.js') }}"></script>

{% endblock scripts %}
